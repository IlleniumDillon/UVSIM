<?xml version="1.0"?>

<robot name="robot" xmlns:xacro="http://www.ros.org/wiki/xacro">
  	<xacro:property name="robot_name" value="$(arg robot_name)" />
  	<xacro:property name="length_wheel" value="0.04" />
	<xacro:property name="radius_wheel" value="0.06" />
  	<xacro:property name="PI" value="3.1415926"/>
	<xacro:macro name="default_inertial" params="mass">
		<inertial>
			<mass value="${mass}" />
			<inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1" />
		</inertial>
	</xacro:macro>
  
  	<link name="${robot_name}_base_link">
    	<visual>
			<geometry>
				<box size="0.6 0.45 0.1"/>
			</geometry>
    		<origin rpy="0 0 0" xyz="0 0 0.05"/>  
    		<material name="white">
      			<color rgba="1 1 1 1"/>
    		</material>
    	</visual>
		<collision>
			<geometry>
       			<box size="0.6 0.45 0.1"/>
			</geometry>
		</collision>
    	<xacro:default_inertial mass="15.0"/>    
 	</link>

 	<link name="${robot_name}_wheel_1">
    <visual>
      <geometry>
        <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
      </geometry>
    <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
		<collision>
			<origin rpy="0 0 0" xyz="0 0 0"/>
			<geometry>
        <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
			</geometry>
		</collision>
      <mu1>0.5</mu1>
			<mu2>0.5</mu2>
		<xacro:default_inertial mass="0.5"/>  
 	</link>

 	<link name="${robot_name}_wheel_2">
    <visual>
      <geometry>
        <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black"/>
    </visual>
		<collision>
			<origin rpy="0 0 0" xyz="0 0 0"/>
			<geometry>
        <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
			</geometry>
		</collision>
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
		<xacro:default_inertial mass="0.5"/>  
 	</link>
    
 	<link name="${robot_name}_wheel_3">
    <visual>
      <geometry>
        <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
      </geometry>
			<origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black"/>
    </visual>
		<collision>
			<origin rpy="0 0 0" xyz="0 0 0"/>
			<geometry>
        <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
			</geometry>
		</collision>
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
		<xacro:default_inertial mass="0.5"/>    
 	</link>

 	<link name="${robot_name}_wheel_4">
    <visual>
      <geometry>
        <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
      </geometry>
			<origin rpy="0 0 0" xyz="0 0 0"/>
   			<material name="black"/>
   		</visual>
		<collision>
			<origin rpy="0 0 0" xyz="0 0 0"/>
			<geometry>
        <cylinder length="${length_wheel}" radius="${radius_wheel}"/>
			</geometry>
		</collision>
			<mu1>0.5</mu1>
			<mu2>0.5</mu2>
		<xacro:default_inertial mass="0.5"/>    
 	</link>

  <link name="${robot_name}_imu">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
      <material name="green">
        <color rgba="0 1 0 1"/>
      </material>
    </visual>

    <inertial>
      <mass value="1e-2" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <link name="${robot_name}_rslidar">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	      <cylinder length="0.1" radius="0.06"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.06"/>
      </geometry>
    </visual>

    <inertial>
      <mass value="1e-2" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <joint name="${robot_name}_base_to_wheel1" type="continuous">
    <parent link="${robot_name}_base_link"/>
    <child link="${robot_name}_wheel_1"/>
    <origin rpy="${-PI/2} 0 0" xyz="0.2 0.25 0"/>
    <axis xyz="0 0 1" />
  </joint>

  <joint name="${robot_name}_base_to_wheel2" type="continuous">
    <axis xyz="0 0 1" />
    <parent link="${robot_name}_base_link"/>
    <child link="${robot_name}_wheel_2"/>
    <origin rpy="${-PI/2} 0 0" xyz="-0.2 0.25 0"/>
  </joint>

  <joint name="${robot_name}_base_to_wheel3" type="continuous">
    <parent link="${robot_name}_base_link"/>
    <axis xyz="0 0 1" />
    <child link="${robot_name}_wheel_3"/>
    <origin rpy="${-PI/2} 0 0" xyz="0.2 -0.25 0"/>
  </joint>

  <joint name="${robot_name}_base_to_wheel4" type="continuous">
    <parent link="${robot_name}_base_link"/>
    <axis xyz="0 0 1" />
    <child link="${robot_name}_wheel_4"/>
    <origin rpy="${-PI/2} 0 0" xyz="-0.2 -0.25 0"/>
  </joint>

 <!-- IMU joint -->
  <joint name="${robot_name}_imu_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0.2 0 0.15" rpy="0 0 0"/>
    <parent link="${robot_name}_base_link"/>
    <child link="${robot_name}_imu"/>
  </joint>

  <joint name="${robot_name}_rslidar_joint" type="fixed">
    <origin xyz="0.2 0.0 0.25" rpy="0 0 0"/>
    <parent link="${robot_name}_base_link"/>
    <axis xyz="0 1 0" />
    <child link="${robot_name}_rslidar"/>
  </joint>

  <gazebo reference="${robot_name}_base_footprint">
		<material>Gazebo/Green</material>
		<turnGravityOff>false</turnGravityOff>
	</gazebo>

	<gazebo reference="${robot_name}_base_link">
		<material>Gazebo/DarkGrey</material>
	</gazebo>

	<gazebo reference="${robot_name}_wheel_1">
		<material>Gazebo/Red</material>
	</gazebo>

	<gazebo reference="${robot_name}_wheel_2">
		<material>Gazebo/Black</material>
	</gazebo>

	<gazebo reference="${robot_name}_wheel_3">
    <material>Gazebo/Red</material>
 	</gazebo>

	<gazebo reference="${robot_name}_wheel_4">
    <material>Gazebo/Black</material>
	</gazebo>

  <gazebo>
    <plugin name="${robot_name}_mecanum_controller" filename="libgazebo_ros_planar_move.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>${robot_name}_odom</odometryFrame>
      <!-- <robotNamespace>/</robotNamespace> -->
      <leftFrontJoint>${robot_name}_base_to_wheel1</leftFrontJoint>
      <rightFrontJoint>${robot_name}_base_to_wheel3</rightFrontJoint>
      <leftRearJoint>${robot_name}_base_to_wheel2</leftRearJoint>
      <rightRearJoint>${robot_name}_base_to_wheel4</rightRearJoint>
      <odometryRate>0.0</odometryRate>
      <robotBaseFrame>${robot_name}_base_link</robotBaseFrame>
      <broadcastTF>1</broadcastTF>
    </plugin>
  </gazebo>

  <gazebo reference="${robot_name}_imu">
    <material>Gazebo/White</material>
    <gravity>true</gravity>
    <sensor name="${robot_name}_imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>imu</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>${robot_name}_imu</bodyName>
        <updateRateHZ>100.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>${robot_name}_imu</frameName>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

  <gazebo reference="${robot_name}_rslidar">
    <material>Gazebo/DarkGrey</material>
    <sensor type="ray" name="${robot_name}_rslidar-VLP16">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>2000</samples>
            <resolution>1</resolution>
            <min_angle>-${PI}</min_angle>
            <max_angle>${PI}</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-${15.0*PI/180.0}</min_angle>
            <max_angle> ${15.0*PI/180.0}</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.2</min>
          <max>100.0</max>
          <resolution>0.001</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0</stddev>
        </noise>
      </ray>
      <plugin name="${robot_name}_gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_laser.so">
        <topicName>rslidar_points</topicName>
        <frameName>/${robot_name}_rslidar</frameName>
        <organize_cloud>false</organize_cloud>
        <min_range>0.2</min_range>
        <max_range>100.0</max_range>
        <gaussianNoise>0.008</gaussianNoise>
      </plugin>
    </sensor>
  </gazebo>

</robot>
